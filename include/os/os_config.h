#ifndef OS_CONFIG_H_INCLUDED
#define OS_CONFIG_H_INCLUDED

// SCHEDULER BEHAVIORS
#define ROUND_ROBIN 0
#define PRIORITY_SCHEDULING 1



/// SETTINGS

#define TIMER 0
#define EXTERNAL_INTERRUPT 1
#define SCHEDULER_BEHAVIOR ROUND_ROBIN

// sets the housekeeping(idle) task to sleep if set to 1
#define IDLE_SLEEP 1


#if TIMER < 0 || TIMER > 2
    #error invalid value used for timer in os config
#endif
#if EXTERNAL_INTERRUPT < 0 || EXTERNAL_INTERRUPT > 1
    #error invalid value used for external interrupt in os config
#endif

#include "avr/io.h"

#if TIMER == 0

#define TIMER_CTC_REG TCCR0A
#define TIMER_PRESCALER_REG TCCR0B
#define TIMER_INTERRUPT_REG TIMSK0
#define TIMER_INTERRUPT_ENABLE OCIE0A
#define TIMER_OUTPUT_COMPA OCR0A
#define TIMER_INTERRUPT_VECTOR TIMER0_COMPA_vect


#elif TIMER == 1

#define TIMER_CTC_REG TCCR1A
#define TIMER_PRESCALER_REG TCCR1B
#define TIMER_INTERRUPT_REG TIMSK1
#define TIMER_INTERRUPT_ENABLE OCIE1A
#define TIMER_OUTPUT_COMPA OCR1A
#define TIMER_INTERRUPT_VECTOR TIMER1_COMPA_vect

#elif TIMER == 2

#define TIMER_CTC_REG TCCR2A
#define TIMER_PRESCALER_REG TCCR2B
#define TIMER_INTERRUPT_REG TIMSK2
#define TIMER_INTERRUPT_ENABLE OCIE2A
#define TIMER_OUTPUT_COMPA OCR2A
#define TIMER_INTERRUPT_VECTOR TIMER2_COMPA_vect

#endif // TIMER 

#if EXTERNAL_INTERRUPT == 0

#define EXTERNAL_INTERRUPT_PIN PD2
#define EXTERNAL_ICS_BITS (1 << ISC01) | (1 << ISC00)
#define EXTERNAL_INTERRUPT_ENABLE (1 << INT0)
#define TRIGGER_CONTEXT_CHANGE PORTD |= (1 << EXTERNAL_INTERRUPT_PIN)
#define RESET_CONTEXT_CHANGE_TRIGGER PORTD &= ~(1 << EXTERNAL_INTERRUPT_PIN)
#define CONTEXT_SWITCH_VECTOR INT0_vect
#define ENTER_CRITICAL (EIMSK &= ~(1 << INT0)) 
#define EXIT_CRITICAL (EIMSK |= (1 << INT0))


#elif EXTERNAL_INTERRUPT == 1

#define EXTERNAL_INTERRUPT_PIN PD3
#define EXTERNAL_ICS_BITS (1 << ISC11) | (1 << ISC10)
#define EXTERNAL_INTERRUPT_ENABLE (1 << INT1)
#define TRIGGER_CONTEXT_CHANGE PORTD |= (1 << EXTERNAL_INTERRUPT_PIN)
#define RESET_CONTEXT_CHANGE_TRIGGER PORTD &= ~(1 << EXTERNAL_INTERRUPT_PIN)
#define CONTEXT_SWITCH_VECTOR INT1_vect 
#define ENTER_CRITICAL (EIMSK &= ~(1 << INT1)) 
#define EXIT_CRITICAL (EIMSK |= (1 << INT1))

#endif // EXTERNAL INTERRUPT

#endif // OS CONFIG